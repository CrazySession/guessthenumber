{"version":3,"sources":["actions/index.js","data/fonts.js","components/Header.js","api/unsplash.js","components/SearchBar.js","components/RemainingAttempts.js","components/BurnendNumbers.js","data/difficultiesData.js","components/Difficulties.js","components/NavBar.js","components/App.js","reducers/index.js","index.js"],"names":["createNumber","number","type","payload","chooseFont","fontNumber","setValue","value","guessed","status","addValue","setDifficulty","tries","fonts","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","length","react_default","a","createElement","style","fontFamily","concat","randomFont","fontSize","Component","connect","state","axios","create","baseURL","headers","Authorization","SearchBar","getUser","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","unsplash","get","params","query","pics","rndPic","sent","storePics","data","results","t0","console","error","stop","compareNum","e","preventDefault","count","rndNumber","giveHint","setState","Math","ceil","random","counts","log","nameInput","focus","_this2","_this$props","guess","onSubmit","border","ref","input","disabled","onChange","parseInt","target","randomNumber","valueList","picList","some","src","urls","small","alt","textAlign","map","num","key","float","textDecoration","color","diff","difficulty","numbers","onClick","chosenDiff","hint","hintList","alert","components_Difficulties","App","className","components_Header","components_SearchBar","id","components_RemainingAttempts","components_BurnendNumbers","components_NavBar","href","rel","marginTop","combineReducers","arguments","undefined","action","values","stat","toConsumableArray","ReactDOM","render","es","store","createStore","reducers","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e8fa052.chunk.js","sourcesContent":["export const createNumber = (number) => {\r\n    return{\r\n        type: 'CREATE_RND_NUMBER',\r\n        payload: {\r\n            number : number\r\n        }\r\n    }\r\n};\r\n\r\nexport const chooseFont = (fontNumber) => {\r\n    return{\r\n        type: 'CHOOSE_FONT',\r\n        payload:{\r\n            fontNumber : fontNumber\r\n        }\r\n    }\r\n};\r\n\r\n// too low - too high\r\nexport const giveHint = (number, rndNumber) => {\r\n    return {\r\n        type: 'NUMBER_ENTERED',\r\n        payload: {\r\n            number : number,\r\n            rndNumber : rndNumber\r\n        }\r\n    }\r\n};\r\n\r\nexport const count = (some) => {\r\n    return {\r\n        type: 'COUNT_ATTEMPTS',\r\n        payload: {\r\n            some : some\r\n        }\r\n    }\r\n};\r\n\r\n// set input value -- onChange()\r\nexport const setValue = (value) => {\r\n    return {\r\n        type: 'SET_VALUE',\r\n        payload: {\r\n            value : value\r\n        }\r\n    }\r\n};\r\n\r\n// lock/open input field\r\nexport const guessed = (status) => {\r\n    return {\r\n        type: 'GUESS_STATUS',\r\n        payload: {\r\n            status : status\r\n        }\r\n    }\r\n};\r\n\r\n// adding numbers for BurnendNumbers\r\nexport const addValue = (value) => {\r\n    return {\r\n        type: 'ADD_VALUE',\r\n        payload: {\r\n            value : value\r\n        }\r\n    }\r\n};\r\n\r\nexport const setDifficulty = (tries) => {\r\n    return {\r\n        type: 'SET_DIFFICULTY',\r\n        payload: {\r\n            tries : tries\r\n        }\r\n    }\r\n};\r\n\r\nexport const storePics = (pics) => {\r\n    return {\r\n        type: 'STORE_PICS',\r\n        payload: {\r\n            pics : pics\r\n        }\r\n    }\r\n};","export const fonts = [\r\n    'Montserrat',\r\n    'Oswald',\r\n    'ZCOOL KuaiLe',\r\n    'Roboto Mono',\r\n    'Ranga',\r\n    'Quicksand',\r\n    'Indie Flower',\r\n    'Pacifico',\r\n    'Dancing Script',\r\n    'Shadows Into Light',\r\n    'Kumar One Outline',\r\n    'Gloria Hallelujah',\r\n    'Satisfy',\r\n    'Fredoka One',\r\n];","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { chooseFont } from \"../actions\";\r\n\r\nimport { fonts } from \"../data/fonts\";\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.props.chooseFont(fonts.length-1);\r\n    }\r\n    render(){\r\n\r\n    return (\r\n        <h1 style={{ fontFamily: `'${fonts[this.props.randomFont]}'` ,fontSize: '4em'}}>\r\n            Guess the number\r\n        </h1>\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        randomFont : state.randomFont\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { chooseFont }) (Header)","import axios from 'axios';\r\n\r\nexport default axios.create(\r\n    {\r\n        baseURL : 'https://api.unsplash.com',\r\n        headers : {\r\n            Authorization: 'Client-ID 2f9241b7becef0ea7345e6f44fe0453516aa2cc18ed7ae7a659b622739007f54'\r\n        }\r\n    }\r\n);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {    giveHint,\r\n            count,\r\n            setValue,\r\n            guessed,\r\n            addValue,\r\n            setDifficulty,\r\n            storePics} from \"../actions\";\r\nimport unsplash from '../api/unsplash'\r\n\r\nimport './css/searchBar.css';\r\nimport {fonts} from \"../data/fonts\";\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { rndPic : Math.ceil(Math.random()*4)-1 , pics : ['cats', 'cat', 'dogs', 'dog']};\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.nameInput.focus();\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const response = await unsplash.get('/search/photos', {\r\n                params: {query : this.state.pics[this.state.rndPic]}\r\n            });\r\n            this.props.storePics(response.data.results);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    //#TODO extract function to action creater !? or helper function ?!\r\n\r\n    // #### Main Function ####\r\n\r\n    compareNum = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Reducing Reaming Attempts by one\r\n        this.props.count(1);\r\n\r\n        // Case --- Win Game\r\n        if (this.props.value === this.props.rndNumber) {\r\n            this.props.giveHint(this.props.value, this.props.rndNumber);\r\n            this.props.guessed(true);\r\n            this.props.setDifficulty('');\r\n            this.setState( {rndPic : Math.ceil(Math.random()*4)-1 } );\r\n            this.getUser();\r\n        }else{\r\n\r\n            // Case -- - Lose Game\r\n            if (this.props.counts === 1){\r\n                console.log('you lose!better luck next time.' +\r\n                    'the number was ' + this.props.rndNumber);\r\n                this.props.guessed(true);\r\n                this.props.setDifficulty('');\r\n\r\n                // Case --- Guessed Wrong but remaining attempts\r\n            }else {\r\n                this.props.giveHint(this.props.value, this.props.rndNumber);\r\n                this.props.addValue(this.props.value);\r\n            }\r\n\r\n            this.props.setValue('');\r\n        }\r\n    };\r\n    render() {\r\n        // destructering\r\n        const { value, rndNumber, guess, randomFont } = this.props;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.compareNum}>\r\n                    <input\r\n                        style={value === rndNumber && guess === true ? {border: 'green solid 8px'} : {\r\n                            border: 'black solid 8px',\r\n                            fontFamily: `'${fonts[randomFont]}'`\r\n                        }}\r\n                        type={'number'}\r\n                        ref={(input) => { this.nameInput = input; }}\r\n                        /*ref={(ip) => this.myInp = ip}*/\r\n                        disabled={guess}\r\n                        value={value}\r\n                        onChange={e => this.props.setValue(parseInt(e.target.value))}\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        rndNumber : state.randomNumber,\r\n        counts :    state.counts,\r\n        value :     state.value,\r\n        guess :     state.guess,\r\n        valueList : state.valueList,\r\n        randomFont :state.randomFont,\r\n        picList :   state.picList\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {   giveHint,\r\n                                            count,\r\n                                            setValue,\r\n                                            guessed,\r\n                                            addValue,\r\n                                            setDifficulty,\r\n                                            storePics\r\n                                        }) (SearchBar)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {fonts} from \"../data/fonts\";\r\n\r\nconst RemainingAttempts = (props) => {\r\n    // destructering\r\n    const { counts, randomFont, rndNumber, guess, value, picList } = props;\r\n\r\n    if (value === rndNumber && guess && picList) {\r\n        return (\r\n            <div>\r\n                <img src={picList[Math.ceil(Math.random()*10)-1].urls.small} alt={'random Pic'}/>\r\n                <p style={{ textAlign:'center', fontFamily: `'${fonts[randomFont]}'` }}>Victory! You did it! Great! Try again?!</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return <div style={{ fontFamily: `'${fonts[randomFont]}'` ,fontSize: '4em'}}>Remaining Attempts: {counts}</div>\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        counts      : state.counts,\r\n        randomFont  : state.randomFont,\r\n        rndNumber   : state.randomNumber,\r\n        guess       : state.guess,\r\n        value       : state.value,\r\n        picList     : state.picList\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(RemainingAttempts)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {fonts} from \"../data/fonts\";\r\n\r\nconst BurnendNumbers = (props) =>{\r\n        return (\r\n            props.valueList.map(num => {\r\n                return <div key={num} style={{float: 'left' ,textDecoration: 'line-through', color:'red', fontFamily: `'${fonts[props.randomFont]}'`, fontSize:'4em'}}>\r\n                    {`${num}, `}\r\n                </div>\r\n            })\r\n        )\r\n    };\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        valueList : state.valueList,\r\n        randomFont: state.randomFont\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(BurnendNumbers)","export const diff = [\r\n    { difficulty : 'EASY',\r\n        numbers : 10,\r\n        tries : 5,\r\n    },\r\n\r\n    { difficulty : 'MEDIUM',\r\n        numbers : 100,\r\n        tries : 10\r\n    },\r\n\r\n    { difficulty : 'HARD',\r\n        numbers : 1000,\r\n        tries : 15\r\n    }\r\n];","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setDifficulty, createNumber } from \"../actions\";\r\n\r\nimport { diff } from \"../data/difficultiesData\";\r\n\r\nconst Difficulties = (props) => {\r\n        const difficulty = diff.map(diff => {\r\n            return(\r\n                <button\r\n                    key={diff.difficulty}\r\n                    onClick={() => {props.setDifficulty(diff.tries); props.createNumber(diff.numbers);}}>\r\n                    <b style={{fontSize:'1.5em'}}>{diff.difficulty}</b><br/><br/><hr/>\r\n                    Count: {diff.numbers}<br/><br/>\r\n                    Attempts: {diff.tries}\r\n                </button>\r\n            )\r\n        });\r\n        return (\r\n            <div>{difficulty}</div>\r\n        )\r\n};\r\n\r\nconst mapStateToProps = () => {\r\n  return {\r\n\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps , { setDifficulty, createNumber }) (Difficulties)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { guessed, addValue, setValue, chooseFont } from \"../actions\";\r\n\r\nimport Difficulties from './Difficulties';\r\nimport {fonts} from \"../data/fonts\";\r\n\r\nconst NavBar = (props) => {\r\n    //destructering\r\n    const { chosenDiff, addValue, guessed, chooseFont, setValue, randomFont, guess, hint  } = props;\r\n\r\n    const gameStart = () => {\r\n        if (chosenDiff !== 'Easy' && chosenDiff !== 'Medium' && chosenDiff !== 'Hard'){\r\n            alert('please select a difficulty first');\r\n        }else{\r\n            addValue('clear');\r\n            guessed(false);\r\n            chooseFont(fonts.length-1);\r\n            setValue('');\r\n        }\r\n    };\r\n\r\n    // return if input field locked --- game not started yet\r\n    if (guess)\r\n        return(\r\n            <div>\r\n                <button\r\n                    onClick={gameStart}>\r\n                    Start Game\r\n                </button>\r\n                <span style={{ fontFamily: `'${fonts[randomFont]}'` ,fontSize: '1em'}}>{ chosenDiff }</span>\r\n                <br/><br/>\r\n                <Difficulties   />\r\n            </div>\r\n        );\r\n\r\n    // return if input field open --- game started\r\n    if (!guess)\r\n        return(\r\n            <div style={{ fontFamily: `'${fonts[randomFont]}'` ,fontSize: '4em'}}>{hint}</div>\r\n        );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        guess : state.guess,\r\n        chosenDiff : state.chosenDiff,\r\n        hint : state.hintList,\r\n        randomFont : state.randomFont\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { guessed, addValue, setValue, chooseFont }) (NavBar)","import React , { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createNumber } from \"../actions\";\r\n\r\nimport Header from './Header';\r\nimport SearchBar from './SearchBar';\r\nimport RemainingAttempts from \"./RemainingAttempts\";\r\nimport BurnendNumbers from './BurnendNumbers';\r\nimport NavBar from './NavBar';\r\n\r\nimport './css/grid.css';\r\n\r\nclass App extends Component {\r\n    render(){\r\n    console.log(this.props.rndNumber);\r\n    return (\r\n        <div className={'container'}>\r\n            <header>\r\n                <Header             />\r\n            </header>\r\n            <main>\r\n                <SearchBar          />\r\n            </main>\r\n            <aside id={\"left\"}>\r\n                <RemainingAttempts  />\r\n            </aside>\r\n            <aside id={\"right\"} style={{border:'black solid 2px'}}>\r\n                <BurnendNumbers     />\r\n            </aside>\r\n            <section id={'nav'}>\r\n                <NavBar             />\r\n            </section>\r\n            <footer>\r\n                &copy; 2019 This Site was designed and created by\r\n                                                        <a href=\"https://github.com/CrazySession\"\r\n                                                        target=\"_blank\"\r\n                                                        rel=\"noopener noreferrer\"> <b>Andreas Kochmann</b> <i style={{ color: '#8D674B', fontSize: '1.3em', marginTop : '5px'}} className=\"fab fa-github\"></i> </a>\r\n                Thanks for all the awesome pictures to <a href=\"https://unsplash.com/\"\r\n                                              target=\"_blank\"\r\n                                                          rel=\"noopener noreferrer\"><b>Unsplash</b> <i style={{ color: '#8D674B', fontSize: '1.3em', marginTop : '5px'}} className=\"fas fa-camera\"></i></a>\r\n            </footer>\r\n        </div>\r\n    )\r\n}}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        rndNumber : state.randomNumber,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { createNumber })(App)","import { combineReducers } from 'redux';\r\n\r\n// create rndNumber depending on difficulty - { createNumber } actionCreater\r\nconst randomNumber = (rndNumber = 0,action) => {\r\n    if (action.type === 'CREATE_RND_NUMBER'){\r\n        return rndNumber = Math.ceil(Math.random() * action.payload.number);\r\n    }\r\n\r\n    return rndNumber;\r\n};\r\n\r\nconst randomFont = (fontNumber = 0,action) => {\r\n    if (action.type === 'CHOOSE_FONT'){\r\n        return fontNumber = Math.ceil(Math.random() * action.payload.fontNumber);\r\n    }\r\n\r\n    return fontNumber;\r\n};\r\n\r\nconst hintList = (hint = '',action) => {\r\n    if (action.type === 'NUMBER_ENTERED'){\r\n        if (action.payload.number === action.payload.rndNumber) {\r\n            return hint = '';\r\n        }else if (action.payload.number < action.payload.rndNumber){\r\n            return hint = 'too low';\r\n        }else{\r\n            return hint = 'too high';\r\n        }\r\n\r\n    }\r\n\r\n    return hint;\r\n};\r\n\r\n// sets count depending on difficulty and (--) attempts\r\nconst counts = (count = 5,action) => {\r\n    if (action.type === 'SET_DIFFICULTY'){\r\n        count = action.payload.tries;\r\n        return count\r\n    }\r\n\r\n    if (action.type === 'COUNT_ATTEMPTS'){\r\n        count = count - action.payload.some;\r\n        // count-- also fine -- no need for action creaator variable\r\n        return count;\r\n    }\r\n\r\n    return count;\r\n};\r\n\r\nconst chosenDiff = (chosenDiff = 'Choose your difficulty',action) => {\r\n    if (action.type === 'SET_DIFFICULTY'){\r\n        switch (action.payload.tries){\r\n            case 5:\r\n                return chosenDiff = 'Easy';\r\n            case 10:\r\n                return chosenDiff = 'Medium';\r\n            case 15:\r\n                return chosenDiff = 'Hard';\r\n            default:\r\n                return chosenDiff = 'Choose your difficulty';\r\n        }\r\n    }\r\n\r\n    return chosenDiff\r\n};\r\n\r\n// saves value from input\r\nconst value = (values = ' ', action) => {\r\n    if (action.type === 'SET_VALUE'){\r\n        values = action.payload.value;\r\n        return values;\r\n    }\r\n\r\n    return values;\r\n};\r\n\r\n// locks and opens input field\r\nconst guess = (stat = true,action) => {\r\n    if (action.type === 'GUESS_STATUS'){\r\n        return stat = action.payload.status;\r\n    }\r\n\r\n    return stat;\r\n};\r\n\r\nconst valueList = (valueList = [],action) => {\r\n    if (action.type === 'ADD_VALUE') {\r\n        if ( action.payload.value === 'clear'){\r\n            return valueList = []\r\n        }\r\n        valueList = [...valueList,action.payload.value];\r\n        return valueList\r\n    }\r\n\r\n    return valueList;\r\n};\r\n\r\nconst picList = (picList = '',action) => {\r\n    if (action.type === 'STORE_PICS'){\r\n        picList = action.payload.pics;\r\n        return picList\r\n    }\r\n\r\n    return picList;\r\n};\r\n\r\nexport default combineReducers({\r\n    hintList : hintList,\r\n    randomNumber: randomNumber,\r\n    counts: counts,\r\n    value : value,\r\n    guess : guess,\r\n    valueList : valueList,\r\n    chosenDiff : chosenDiff,\r\n    randomFont : randomFont,\r\n    picList : picList\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App/>\r\n    </Provider>\r\n    ,document.getElementById('root'));"],"sourceRoot":""}